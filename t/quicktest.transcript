? 1 + 2
= 3
? 1 + 2; 3 + 4
= 7
? 1 - 3
= -2
? 1.minus 3
= -2
? 1.eq 3
= false
? 1.eq 1
= true
? 1 == 1
= true
? 1 == 3
= false
? 1.eq(1)
= true
? 1.plus(2, 3)
= 6
? 1.plus 2 3
= 6
? 'foo' ++ 'bar'
= 'foobar'
? (3, 2, 1)(1)
= 2
? .plus() 1 2 3
= 6
? .plus(1) 2 3
= 6
? (1, 2, 3).map .plus(1)
= (2, 3, 4)
? + 1 2 3
= 6
? (1, 2, 3) ++ (4, 5)
= (1, 2, 3, 4, 5)
? ( (1), (2), (3) ).map .concat(('x'))
= (('x', 1), ('x', 2), ('x', 3))
? [ 1 == 1 ].ifelse 3 4
= 3
? [ 1 == 0 ].ifelse 3 4
= 4
? 3 + 2 * 4
= 11
? let x = 3; x + 2
= 5
? let x = [ let y = 3 ] + 4;
= 7
? let (x, y) = (1, 2); y + 3;
= 5
? var x = 3; do { let y = 4; x = x + y }; x
= 7
? let f = Lambda.new (x) { x + 1 }; f 3
= 4
? let f = do { let x = 3; Lambda.new (y) { x + y } }; f 7
= 10
